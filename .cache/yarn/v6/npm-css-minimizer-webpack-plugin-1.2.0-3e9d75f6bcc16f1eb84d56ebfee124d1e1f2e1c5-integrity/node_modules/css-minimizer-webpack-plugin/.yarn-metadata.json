{
  "manifest": {
    "name": "css-minimizer-webpack-plugin",
    "version": "1.2.0",
    "description": "cssnano plugin for Webpack",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/css-minimizer-webpack-plugin.git"
    },
    "author": {
      "name": "Loann Neveu"
    },
    "homepage": "https://github.com/webpack-contrib/css-minimizer-webpack-plugin",
    "bugs": {
      "url": "https://github.com/webpack-contrib/css-minimizer-webpack-plugin/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/webpack"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 10.13.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "clean": "del-cli dist",
      "prebuild": "npm run clean",
      "build": "cross-env NODE_ENV=production babel src -d dist --copy-files",
      "commitlint": "commitlint --from=master",
      "security": "npm audit",
      "lint:prettier": "prettier \"{**/*,*}.{js,json,md,yml,css,ts}\" --list-different",
      "lint:js": "eslint --cache .",
      "lint": "npm-run-all -l -p \"lint:**\"",
      "test:only": "cross-env NODE_ENV=test jest",
      "test:watch": "npm run test:only -- --watch",
      "test:coverage": "npm run test:only -- --collectCoverageFrom=\"src/**/*.js\" --coverage",
      "pretest": "npm run lint",
      "test": "npm run test:coverage",
      "prepare": "npm run build",
      "release": "standard-version",
      "defaults": "webpack-defaults"
    },
    "files": [
      "dist"
    ],
    "peerDependencies": {
      "webpack": "^4.0.0 || ^5.0.0"
    },
    "dependencies": {
      "cacache": "^15.0.5",
      "cssnano": "^4.1.10",
      "find-cache-dir": "^3.3.1",
      "jest-worker": "^26.3.0",
      "p-limit": "^3.0.2",
      "schema-utils": "^3.0.0",
      "serialize-javascript": "^5.0.1",
      "source-map": "^0.6.1",
      "webpack-sources": "^1.4.3"
    },
    "devDependencies": {
      "@babel/cli": "^7.11.6",
      "@babel/core": "^7.11.6",
      "@babel/preset-env": "^7.11.5",
      "@commitlint/cli": "^11.0.0",
      "@commitlint/config-conventional": "^11.0.0",
      "@webpack-contrib/defaults": "^6.3.0",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "babel-jest": "^26.3.0",
      "clean-css": "^4.2.3",
      "copy-webpack-plugin": "^6.4.1",
      "cross-env": "^7.0.2",
      "css-loader": "^5.0.1",
      "csso": "^4.0.3",
      "del": "^6.0.0",
      "del-cli": "^3.0.1",
      "eslint": "^7.9.0",
      "eslint-config-prettier": "^7.1.0",
      "eslint-plugin-import": "^2.22.0",
      "husky": "^4.3.0",
      "jest": "^26.4.2",
      "lint-staged": "^10.4.0",
      "memfs": "^3.2.0",
      "mini-css-extract-plugin": "^1.3.3",
      "node-sass": "^5.0.0",
      "npm-run-all": "^4.1.5",
      "postcss": "^7.0.32",
      "prettier": "^2.1.2",
      "sass-loader": "^10.0.2",
      "standard-version": "^9.0.0",
      "webpack": "^4.45.0"
    },
    "keywords": [
      "cssnano",
      "css",
      "webpack",
      "webpack-plugin",
      "minimize",
      "minimizer",
      "minify",
      "minifier",
      "optimize",
      "optimizer"
    ],
    "_registry": "npm",
    "_loc": "/var/www/.cache/yarn/v6/npm-css-minimizer-webpack-plugin-1.2.0-3e9d75f6bcc16f1eb84d56ebfee124d1e1f2e1c5-integrity/node_modules/css-minimizer-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# css-minimizer-webpack-plugin\n\nThis plugin uses [cssnano](https://cssnano.co) to optimize and minify your CSS.\n\nJust like [optimize-css-assets-webpack-plugin](https://github.com/NMFR/optimize-css-assets-webpack-plugin) but more accurate with source maps and assets using query string, allows to cache and works in parallel mode.\n\n## Getting Started\n\nTo begin, you'll need to install `css-minimizer-webpack-plugin`:\n\n```console\n$ npm install css-minimizer-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` configuration. For example:\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /.s?css$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader'],\n      },\n    ],\n  },\n  optimization: {\n    minimize: true,\n    minimizer: [\n      // For webpack@5 you can use the `...` syntax to extend existing minimizers (i.e. `terser-webpack-plugin`), uncomment the next line\n      // `...`,\n      new CssMinimizerPlugin(),\n    ],\n  },\n};\n```\n\nThis will enable CSS optimization only in production mode.\nIf you want to run it also in development set the `optimization.minimize` option to `true`.\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>` - default: `/\\.css(\\?.*)?$/i`\n\nTest to match files against.\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        test: /\\.foo\\.css$/i,\n      }),\n    ],\n  },\n};\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to include.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        include: /\\/includes/,\n      }),\n    ],\n  },\n};\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to exclude.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        exclude: /\\/excludes/,\n      }),\n    ],\n  },\n};\n```\n\n### `cache`\n\n> ⚠ Ignored in webpack 5! Please use https://webpack.js.org/configuration/other-options/#cache.\n\nType: `Boolean|String`\nDefault: `true`\n\nEnable file caching.\nDefault path to cache directory: `node_modules/.cache/css-minimizer-webpack-plugin`.\n\n> ℹ️ If you use your own `minify` function please read the `minify` section for cache invalidation correctly.\n\n#### `Boolean`\n\nEnable/disable file caching.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        cache: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `String`\n\nEnable file caching and set path to cache directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        cache: 'path/to/cache',\n      }),\n    ],\n  },\n};\n```\n\n### `cacheKeys`\n\n> ⚠ Ignored in webpack 5! Please use https://webpack.js.org/configuration/other-options/#cache.\n\nType: `Function<(defaultCacheKeys, file) -> Object>`\nDefault: `defaultCacheKeys => defaultCacheKeys`\n\nAllows you to override default cache keys.\n\nDefault cache keys:\n\n```js\n({\n  cssMinimizer: require('cssnano/package.json').version, // cssnano version\n  'css-minimizer-webpack-plugin': require('../package.json').version, // plugin version\n  'css-minimizer-webpack-plugin-options': this.options, // plugin options\n  path: compiler.outputPath ? `${compiler.outputPath}/${file}` : file, // asset path\n  hash: crypto.createHash('md4').update(input).digest('hex'), // source file hash\n});\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        cache: true,\n        cacheKeys: (defaultCacheKeys, file) => {\n          defaultCacheKeys.myCacheKey = 'myCacheKeyValue';\n\n          return defaultCacheKeys;\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `parallel`\n\nType: `Boolean|Number`\nDefault: `true`\n\nUse multi-process parallel running to improve the build speed.\nDefault number of concurrent runs: `os.cpus().length - 1`.\n\n> ℹ️ Parallelization can speedup your build significantly and is therefore **highly recommended**.\n\n#### `Boolean`\n\nEnable/disable multi-process parallel running.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        parallel: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `Number`\n\nEnable multi-process parallel running and set number of concurrent runs.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        parallel: 4,\n      }),\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean|Object`\nDefault: `false` (see below for details around `devtool` value and `SourceMapDevToolPlugin` plugin)\n\nEnable (and configure) source map support. Use [PostCss SourceMap options](https://github.com/postcss/postcss-loader#sourcemap).\nDefault configuration when enabled: `{ inline: false }`.\n\n**Works only with `source-map`, `inline-source-map`, `hidden-source-map` and `nosources-source-map` values for the [`devtool`](https://webpack.js.org/configuration/devtool/) option.**\n\nWhy? Because CSS support only these source map types.\n\nThe plugin respect the [`devtool`](https://webpack.js.org/configuration/devtool/) and using the `SourceMapDevToolPlugin` plugin.\nUsing supported `devtool` values enable source map generation.\nUsing `SourceMapDevToolPlugin` with enabled the `columns` option enables source map generation.\n\nUse source maps to map error message locations to modules (this slows down the compilation).\nIf you use your own `minify` function please read the `minify` section for handling source maps correctly.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        sourceMap: true,\n      }),\n    ],\n  },\n};\n```\n\n### `minify`\n\nType: `Function`\nDefault: `undefined`\n\nAllows you to override default minify function.\nBy default plugin uses [cssnano](https://github.com/cssnano/cssnano) package.\nUseful for using and testing unpublished versions or forks.\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        sourceMap: true,\n        minify: (data, inputMap, minimizerOptions) => {\n          const postcss = require('postcss');\n\n          const plugin = postcss.plugin(\n            'custom-plugin',\n            () => (css, result) => {\n              // custom code\n            }\n          );\n\n          const [[filename, input]] = Object.entries(data);\n\n          const postcssOptions = {\n            from: filename,\n            to: filename,\n            map: {\n              prev: inputMap,\n            },\n          };\n\n          return postcss([plugin])\n            .process(input, postcssOptions)\n            .then((result) => {\n              return {\n                css: result.css,\n                map: result.map,\n                warnings: result.warnings(),\n              };\n            });\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `minimizerOptions`\n\nType: `Object`\nDefault: `{ preset: 'default' }`\n\nCssnano optimisations [options](https://cssnano.co/docs/optimisations).\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          preset: [\n            'default',\n            {\n              discardComments: { removeAll: true },\n            },\n          ],\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `warningsFilter`\n\nType: `Function<(warning, file, source) -> Boolean>`\nDefault: `() => true`\n\nAllow to filter css-minimizer warnings (By default [cssnano](https://github.com/cssnano/cssnano)).\nReturn `true` to keep the warning, a falsy value (`false`/`null`/`undefined`) otherwise.\n\n> ⚠️ The `source` argument will contain `undefined` if you don't use source maps.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        warningsFilter: (warning, file, source) => {\n          if (/Dropping unreachable code/i.test(warning)) {\n            return true;\n          }\n\n          if (/file\\.css/i.test(file)) {\n            return true;\n          }\n\n          if (/source\\.css/i.test(source)) {\n            return true;\n          }\n\n          return false;\n        },\n      }),\n    ],\n  },\n};\n```\n\n## Examples\n\n### Use sourcemaps\n\nDon't forget to enable `sourceMap` options for all loaders.\n\n```js\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /.s?css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          { loader: 'css-loader', options: { sourceMap: true } },\n          { loader: 'sass-loader', options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n  optimization: {\n    minimizer: [\n      new CssMinimizerPlugin({\n        sourceMap: true,\n      }),\n    ],\n  },\n};\n```\n\n### Remove all comments\n\nRemove all comments (including comments starting with `/*!`).\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new CssMinimizerPlugin({\n        minimizerOptions: {\n          preset: [\n            'default',\n            {\n              discardComments: { removeAll: true },\n            },\n          ],\n        },\n      }),\n    ],\n  },\n};\n```\n\n### Using custom minifier [csso](https://github.com/css/csso)\n\nBy default plugin uses [cssnano](https://github.com/cssnano/cssnano) package.\nIt is possible to use another minify function.\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  devtool: 'source-map',\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        sourceMap: true,\n        minify: async (data, inputMap) => {\n          const csso = require('csso');\n          const sourcemap = require('source-map');\n\n          const [[filename, input]] = Object.entries(data);\n          const minifiedCss = csso.minify(input, {\n            filename: filename,\n            sourceMap: true,\n          });\n\n          if (inputMap) {\n            minifiedCss.map.applySourceMap(\n              new sourcemap.SourceMapConsumer(inputMap),\n              filename\n            );\n          }\n\n          return {\n            css: minifiedCss.css,\n            map: minifiedCss.map.toJSON(),\n          };\n        },\n      }),\n    ],\n  },\n};\n```\n\n### Using custom minifier [clean-css](https://github.com/jakubpawlowicz/clean-css)\n\nBy default plugin uses [cssnano](https://github.com/cssnano/cssnano) package.\nIt is possible to use another minify function.\n\n> ⚠️ **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  devtool: 'source-map',\n  optimization: {\n    minimize: true,\n    minimizer: [\n      new CssMinimizerPlugin({\n        sourceMap: true,\n        minify: async (data, inputMap) => {\n          // eslint-disable-next-line global-require\n          const CleanCSS = require('clean-css');\n\n          const [[filename, input]] = Object.entries(data);\n          const minifiedCss = await new CleanCSS({ sourceMap: true }).minify({\n            [filename]: {\n              styles: input,\n              sourceMap: inputMap,\n            },\n          });\n\n          return {\n            css: minifiedCss.styles,\n            map: minifiedCss.sourceMap.toJSON(),\n            warnings: minifiedCss.warnings,\n          };\n        },\n      }),\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/css-minimizer-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/css-minimizer-webpack-plugin\n[node]: https://img.shields.io/node/v/css-minimizer-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/css-minimizer-webpack-plugin\n[tests]: https://github.com/webpack-contrib/css-minimizer-webpack-plugin/workflows/css-minimizer-webpack-plugin/badge.svg\n[tests-url]: https://github.com/webpack-contrib/css-minimizer-webpack-plugin/actions\n[cover]: https://codecov.io/gh/webpack-contrib/css-minimizer-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/css-minimizer-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-minimizer-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=css-minimizer-webpack-plugin\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/css-minimizer-webpack-plugin/-/css-minimizer-webpack-plugin-1.2.0.tgz#3e9d75f6bcc16f1eb84d56ebfee124d1e1f2e1c5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/css-minimizer-webpack-plugin/-/css-minimizer-webpack-plugin-1.2.0.tgz",
    "hash": "3e9d75f6bcc16f1eb84d56ebfee124d1e1f2e1c5",
    "integrity": "sha512-XU4+PXw7QKAlRGU+fB386YiczAAPtk0kVsB/Qf2nX8GJaOXgTsk/PST8YBExeoD299wheG//MCCKlCD5fykb7Q==",
    "registry": "npm",
    "packageName": "css-minimizer-webpack-plugin",
    "cacheIntegrity": "sha512-XU4+PXw7QKAlRGU+fB386YiczAAPtk0kVsB/Qf2nX8GJaOXgTsk/PST8YBExeoD299wheG//MCCKlCD5fykb7Q== sha1-Pp119rzBbx64TVbr/uEk0eHy4cU="
  },
  "registry": "npm",
  "hash": "3e9d75f6bcc16f1eb84d56ebfee124d1e1f2e1c5"
}